name: Deploy Infrastructure
on:
  workflow_run:
    workflows:
    - Clean deployment enviroment with Infrastructure
    types:
    - completed
  push:
    branches:
    - main
    paths:
    - iac/**/*
    - .github/workflows/staging.yaml
    - .github/workflows/development.yaml
    - .github/workflows/clean.yaml

permissions:
  id-token: write
  contents: write

defaults:
  run:
    working-directory: iac/

jobs:
  terraform:
    environment: 'staging'
    name: 'Terraform'
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event.pull_request.merged == true }}
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-1
        role-to-assume: ${{ secrets.ARN_ROLE_ASUME }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      id: init
      run: terraform init -reconfigure -backend-config="bucket=${{ secrets.BUCKET_NAME }}" -backend-config="key=${{ secrets.KEY_STATE_NAME }}"

    - name: Terraform Format
      id: fmt
      run: terraform fmt

    - name: Auto Commit Changes
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "Terraform fmt"
        file_pattern: "*.tf"
        commit_user_name: "github-actions[bot]"

    - name: Terraform Plan
      id: plan
      env:
        TF_VAR_lambda_prefix_name: 'staging'
      run: |
        terraform plan -out=plan -input=false

    - name: Terraform Apply
      env:
        TF_VAR_lambda_prefix_name: 'staging'
      run: terraform apply -auto-approve -input=false plan

  deploy_create_short_url_lambda:
    needs: terraform
    uses: ./.github/workflows/deploy-lambda.yaml
    secrets: inherit
    with:
      lambda_name: create-short-url-staging
      working_directoy: apps/create-short-url/

  deploy_redirect_lambda:
    needs: terraform
    uses: ./.github/workflows/deploy-lambda.yaml
    secrets: inherit
    with:
      lambda_name: redirect-staging
      working_directoy: apps/create-short-url/

  deploy_delete_url_lambda:
    needs: terraform
    uses: ./.github/workflows/deploy-lambda.yaml
    secrets: inherit
    with:
      lambda_name: delete-url-staging
      working_directoy: apps/redirect/

