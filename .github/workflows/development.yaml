name: Deploy deployment enviroment with Infrastructure
on:
  workflow_dispatch:
  pull_request:
    branches:
    - main
    paths:
    - iac/**/*
    - .github/workflows/development.yaml
    - apps/**/*
    types: [opened, synchronize, reopened, labeled]

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: iac/

    outputs:
      short_sha: ${{ steps.shorten_sha.outputs.short_sha }}

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}
        role-to-assume: ${{ secrets.ARN_ROLE_ASUME }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      id: init
      run: terraform init -reconfigure -backend-config="bucket=${{ secrets.BUCKET_NAME }}" -backend-config="key=${{ secrets.KEY_STATE_NAME }}"

    - name: Terraform Format
      id: fmt
      run: terraform fmt

    - name: Auto Commit Changes
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "Terraform fmt"
        file_pattern: "*.tf"
        commit_user_name: "github-actions[bot]"

    - name: Terraform validate
      id: validate
      run: terraform validate

    - name: Shorten commit SHA
      id: shorten_sha
      run: echo "short_sha=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

    - name: Terraform Plan
      id: plan
      env:
        TF_VAR_lambda_prefix_name: ${{ steps.shorten_sha.outputs.short_sha }}
      run: |
        terraform plan -input=false -no-color
      continue-on-error: true

    - uses: actions/github-script@v7
      name: "Terraform Plan Comment"
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>
          *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    # - name: Terraform Apply
    #   env:
    #     TF_VAR_lambda_prefix_name: ${{ steps.shorten_sha.outputs.short_sha }}
    #   run: terraform apply -auto-approve -input=false

    - name: Verify Changed files
      uses: tj-actions/changed-files@v44
      id: verify-changed-files
      with:
        files: |
          apps/**/*

    - name: Get Working Directories from changed files
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      env:
        CHANGED_FILES: ${{ steps.verify-changed-files.outputs.changed_files }}
      run: |
        echo "$CHANGED_FILES"


  # deploy_create_short_url_lambda:
  #   needs:
  #   - terraform
  #   uses: ./.github/workflows/deploy-lambda.yaml
  #   secrets: inherit
  #   with:
  #     lambda_name: create-short-url-${{ needs.terraform.outputs.short_sha }}
  #     working_directory: apps/create-short-url/
  #     # environment: development

  # deploy_redirect_lambda:
  #   needs:
  #   - terraform
  #   uses: ./.github/workflows/deploy-lambda.yaml
  #   secrets: inherit
  #   with:
  #     lambda_name: redirect-${{ needs.terraform.outputs.short_sha }}
  #     working_directory: apps/redirect/
  #     # environment: development

  # deploy_delete_url_lambda:
  #   needs:
  #   - terraform
  #   uses: ./.github/workflows/deploy-lambda.yaml
  #   secrets: inherit
  #   with:
  #     lambda_name: delete-url-${{ needs.terraform.outputs.short_sha }}
  #     working_directory: apps/delete-url/
  # environment: development


